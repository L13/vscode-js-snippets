{
	"keyof":									{ "prefix": "k",	"body": ["keyof "], "description": "" },
	
	"as const":									{ "prefix": "ac",	"body": ["as const"], "description": "" },
	"as const satisfies":						{ "prefix": "acs",	"body": ["as const satisfies "], "description": "" },
	"asserts NAME is T":						{ "prefix": "ai",	"body": ["asserts ${1:T} is ${0:T}"], "description": "" },
	
	"type T = null;":							{ "prefix": "t1",	"body": ["type ${1:T} = ${0:null};"], "description": "" },
	"type T = readonly [];":					{ "prefix": "tr1",	"body": ["type ${1:T} = readonly [$0];"], "description": "" },
	"type T = {};":								{ "prefix": "t_",	"body": ["type ${1:T} = {", "\t$0", "};"], "description": "" },
	
	"{ [K in T] }":								{ "prefix": "_i",	"body": ["{", "\t[${1:K} in ${2:T}]: $0;", "}"], "description": "" },
	"{ [K in T as P] }":						{ "prefix": "_ia",	"body": ["{", "\t[${1:K} in ${2:T} as ${3:P}]: $0;", "}"], "description": "" },
	"{ [K in keyof T] }":						{ "prefix": "_ik",	"body": ["{", "\t[${1:K} in keyof ${2:T}]: $0;", "}"], "description": "" },
	"{ [K in keyof T as P] }":					{ "prefix": "_ika",	"body": ["{", "\t[${1:K} in keyof ${2:T} as ${3:P}]: $0;", "}"], "description": "" },
	
	"T extends U":								{ "prefix": "e",	"body": ["${1:T} extends ${0:any}"], "description": "" },
	"T extends keyof any":						{ "prefix": "ek",	"body": ["${1:T} extends keyof ${0:any}"], "description": "" },
	"T extends readonly any[]":					{ "prefix": "er",	"body": ["${1:T} extends readonly ${0:any}[]"], "description": "" },
		
	"import type {} from ''":					{ "prefix": "it_f1",	"body": ["import type { ${0:name} } from '${1:path}';"], "description": "" },
		
	"export type T = null;":					{ "prefix": "et1",	"body": ["export type ${1:T} = ${0:null};"], "description": "" },
	"export type T = {};":						{ "prefix": "et_",	"body": ["export type ${1:T} = {", "\t$0", "};"], "description": "" },
	
	"export as namespace NAME;":				{ "prefix": "ean1",	"body": ["export as namespace $0;"], "description": "" },
	
	"interface NAME":							{ "prefix": "i_",	"body": ["interface ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"interface NAME extends NAME":				{ "prefix": "ie_",	"body": ["interface ${1:name} extends ${2:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"declare namespace":						{ "prefix": "dn_",	"body": ["declare namespace ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"declare module":							{ "prefix": "dm_",	"body": ["declare module ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"declare class":							{ "prefix": "dc_",	"body": ["declare class ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"declare var NAME = null;":					{ "prefix": "dv1",	"body": ["declare var ${1:name} = ${0:null};"], "description": "" },
	"declare let NAME = null":					{ "prefix": "dl1",	"body": ["declare let ${1:name} = ${0:null};"], "description": "" },
	"declare const":							{ "prefix": "dc1",	"body": ["declare const ${1:name} = ${0:null};"], "description": "" },
		
	"export interface NAME":					{ "prefix": "ei_",	"body": ["export interface ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export interface NAME extends NAME":		{ "prefix": "eie_",	"body": ["export interface ${1:name} extends ${2:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"namespace NAME {}":						{ "prefix": "n_",	"body": ["namespace ${1:name} {", "\t", "$0", "\t", "}"], "description": "" },
	
	"enum NAME {}":								{ "prefix": "e1",	"body": ["enum ${1:name} { $0 };"], "description": "" },
	"enum NAME { ... }":						{ "prefix": "e_",	"body": ["enum ${1:name} {", "\t$0", "};"], "description": "" },
	"const enum NAME {}":						{ "prefix": "ce1",	"body": ["const enum ${1:name} { $0 };"], "description": "" },
	"const enum NAME { ... }":					{ "prefix": "ce_",	"body": ["const enum ${1:name} {", "\t$0", "};"], "description": "" },
	"export enum NAME {}":						{ "prefix": "ee1",	"body": ["export enum ${1:name} { $0 };"], "description": "" },
	"export enum NAME { ... }":					{ "prefix": "ee_",	"body": ["export enum ${1:name} {", "\t$0", "};"], "description": "" },
	"export const enum NAME {}":				{ "prefix": "ece1",	"body": ["export const enum ${1:name} { $0 };"], "description": "" },
	"export const enum NAME { ... }":			{ "prefix": "ece_",	"body": ["export const enum ${1:name} {", "\t$0", "};"], "description": "" },
		
	"readonly NAME":							{ "prefix": "r1",	"body": ["readonly ${1:name} = ${0:null};"], "description": "" },
	
	"public NAME":								{ "prefix": "p1",	"body": ["public ${1:name} = ${0:null};"], "description": "" },
	"public readonly NAME":						{ "prefix": "pr1",	"body": ["public readonly ${1:name} = ${0:null};"], "description": "" },
	"public static NAME":						{ "prefix": "ps1",	"body": ["public static ${1:name} = ${0:null};"], "description": "" },
	
	"private NAME":								{ "prefix": "_1",	"body": ["private ${1:name} = ${0:null};"], "description": "" },
	"private readonly NAME":					{ "prefix": "_r1",	"body": ["private readonly ${1:name} = ${0:null};"], "description": "" },
	"private static NAME = null;":				{ "prefix": "_s1",	"body": ["private static ${1:name} = ${0:null};"], "description": "" }
}