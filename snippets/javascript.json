{
	"await":									{ "prefix": "a",	"body": ["await "], "description": "" },
	"break;":									{ "prefix": "b",	"body": ["break$0;"], "description": "" },
	"continue;":								{ "prefix": "c",	"body": ["continue$0;"], "description": "" },
	"delete":									{ "prefix": "d",	"body": ["delete "], "description": "" },
	"false":									{ "prefix": "f",	"body": ["false"], "description": "" },
	"instanceof":								{ "prefix": "i",	"body": ["${1:identifier} instanceof ${0:constructor}"], "description": "" },
	"null":										{ "prefix": "n",	"body": ["null"], "description": "" },
	"true":										{ "prefix": "t",	"body": ["true"], "description": "" },
	"return":									{ "prefix": "r",	"body": ["return "], "description": "" },
	"undefined":								{ "prefix": "u",	"body": ["undefined"], "description": "" },
	"void":										{ "prefix": "v",	"body": ["void "], "description": "" },
	"yield":									{ "prefix": "y",	"body": ["yield"], "description": "" },
	
	"if () ;":									{ "prefix": "i1",	"body": ["if (${1:condition}) $0;"], "description": "" },
	"if () {}":									{ "prefix": "i_",	"body": ["if (${0:condition}) {", "\t", "}"], "description": "" },
	"if () return;":							{ "prefix": "ir1",	"body": ["if (${0:condition}) return;"], "description": "" },
	"else;":									{ "prefix": "e1",	"body": ["else $0;"], "description": "" },
	"else {}":									{ "prefix": "e_",	"body": ["else {", "\t$0", "}"], "description": "" },
	"else if () ;":								{ "prefix": "ei1",	"body": ["else if ($1) ยง0;"], "description": "" },
	"else if () {}":							{ "prefix": "ei_",	"body": ["else if ($0) {", "\t", "}"], "description": "" },
	
	"switch () { case: break; }":				{ "prefix": "s_cb",	"body": ["switch (${1:value}) {", "\tcase $0:", "\t\t", "\t\tbreak;", "}"], "description": "" },
	"switch () { case: break; default }":		{ "prefix": "s_cbd",	"body": ["switch (${1:value}) {", "\tcase $0:", "\t\t", "\t\tbreak;", "\tdefault:", "\t\t", "}"], "description": "" },
	"switch () { default }":					{ "prefix": "s_d",	"body": ["switch (${0:value}) {", "\t", "\tdefault:", "\t\t", "}"], "description": "" },
	"case: break;":								{ "prefix": "cb",	"body": ["case $0:", "\t", "\tbreak;"], "description": "" },
	
	"do {} while ();":							{ "prefix": "d_w",	"body": ["do {", "\t", "} while (${0:condition});"], "description": "" },
	
	"for (let i = 0) ;":						{ "prefix": "fl1",	"body": ["for (let i = 0; ${1:condition}; i++) $0;"], "description": "" },
	"for (let i = 0) {}":						{ "prefix": "fl_",	"body": ["for (let i = 0; ${0:condition}; i++) {", "\t", "}"], "description": "" },
	
	"for (const key in object) ;":				{ "prefix": "fci1",	"body": ["for (const ${1:key} in ${2:object}) $0;"], "description": "" },
	"for (const key in object) {}":				{ "prefix": "fci_",	"body": ["for (const ${1:key} in ${0:object}) {", "\t", "}"], "description": "" },
	
	"for (let key in object)":					{ "prefix": "fli1",	"body": ["for (let ${1:key} in ${2:object}) $0;"], "description": "" },
	"for (let key in object) {}":				{ "prefix": "fli_",	"body": ["for (let ${1:key} in ${0:object}) {", "\t", "}"], "description": "" },
	
	"for (var key in object)":					{ "prefix": "fvi1",	"body": ["for (var ${1:key} in ${2:object}) $0;"], "description": "" },
	"for (var key in object) {}":				{ "prefix": "fvi_",	"body": ["for (var ${1:key} in ${0:object}) {", "\t", "}"], "description": "" },
	
	"for (const value of object)":				{ "prefix": "fco1",	"body": ["for (const ${1:value} of ${2:object}) $0;"], "description": "" },
	"for (const value of object) {}":			{ "prefix": "fco_",	"body": ["for (const ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"for (let value of object)":				{ "prefix": "flo1",	"body": ["for (let ${1:value} of ${2:object}) $0;"], "description": "" },
	"for (let value of object) {}":				{ "prefix": "flo_",	"body": ["for (let ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"for (var value of object)":				{ "prefix": "fvo1",	"body": ["for (var ${1:value} of ${2:object}) $0;"], "description": "" },
	"for (var value of object) {}":				{ "prefix": "fvo_",	"body": ["for (var ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"for await (const value of object)":		{ "prefix": "faco1",	"body": ["for await (const ${1:value} of ${2:object}) $0;"], "description": "" },
	"for await (const value of object) {}":		{ "prefix": "faco_",	"body": ["for await (const ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"for await (let value of object)":			{ "prefix": "falo1",	"body": ["for await (let ${1:value} of ${2:object}) $0;"], "description": "" },
	"for await (let value of object) {}":		{ "prefix": "falo_",	"body": ["for await (let ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"for await (var value of object)":			{ "prefix": "favo1",	"body": ["for await (var ${1:value} of ${2:object}) $0;"], "description": "" },
	"for await (var value of object) {}":		{ "prefix": "favo_",	"body": ["for await (var ${1:value} of ${0:object}) {", "\t", "}"], "description": "" },
	
	"let name = value;":						{ "prefix": "l1",	"body": ["let ${1:name} = ${0:null};"], "description": "" },
	"let {} = value;":							{ "prefix": "l_1",	"body": ["let { $0 } = ${1:null};"], "description": "" },
	"const name = value;":						{ "prefix": "c1",	"body": ["const ${1:name} = ${0:null};"], "description": "" },
	"const {} = value;":						{ "prefix": "c_1",	"body": ["const { $0 } = ${1:null};"], "description": "" },
	"var name = value;":						{ "prefix": "v1",	"body": ["var ${1:name} = ${0:null};"], "description": "" },
	"var {} = value;":							{ "prefix": "v_1",	"body": ["var { $0 } = ${1:null};"], "description": "" },
	
	"while ()":									{ "prefix": "w1",	"body": ["while (${1:condition}) $0;"], "description": "" },
	"while () {}":								{ "prefix": "w_",	"body": ["while (${0:condition}) {", "\t", "}"], "description": "" },
	
	"try {} catch () {}":						{ "prefix": "t_c_",	"body": ["try {", "\t$0", "} catch (error) {", "\t", "}"], "description": "" },
	"try {} finally {}":						{ "prefix": "t_f_",	"body": ["try {", "\t$0", "} finally {", "\t", "}"], "description": "" },
	"try {} catch () {} finally {}":			{ "prefix": "t_c_f_",	"body": ["try {", "\t$0", "} catch (error) {", "\t", "} finally {", "\t", "}"], "description": "" },
	
	"typeof value === 'boolean'":				{ "prefix": "tb",	"body": ["typeof $0 === 'boolean'"], "description": "" },
	"typeof value === 'function'":				{ "prefix": "tf",	"body": ["typeof $0 === 'function'"], "description": "" },
	"typeof value === 'number'":				{ "prefix": "tn",	"body": ["typeof $0 === 'number'"], "description": "" },
	"typeof value === 'object'":				{ "prefix": "to",	"body": ["typeof $0 === 'object'"], "description": "" },
	"typeof value === 'string'":				{ "prefix": "ts",	"body": ["typeof $0 === 'string'"], "description": "" },
	"typeof value === 'symbol'":				{ "prefix": "ts",	"body": ["typeof $0 === 'symbol'"], "description": "" },
	"typeof value === 'undefined'":				{ "prefix": "tu",	"body": ["typeof $0 === 'undefined'"], "description": "" },
	
	"typeof value !== 'boolean'":				{ "prefix": "tb",	"body": ["typeof $0 !== 'boolean'"], "description": "" },
	"typeof value !== 'function'":				{ "prefix": "tf",	"body": ["typeof $0 !== 'function'"], "description": "" },
	"typeof value !== 'number'":				{ "prefix": "tn",	"body": ["typeof $0 !== 'number'"], "description": "" },
	"typeof value !== 'object'":				{ "prefix": "to",	"body": ["typeof $0 !== 'object'"], "description": "" },
	"typeof value !== 'string'":				{ "prefix": "ts",	"body": ["typeof $0 !== 'string'"], "description": "" },
	"typeof value !== 'symbol'":				{ "prefix": "ts",	"body": ["typeof $0 !== 'symbol'"], "description": "" },
	"typeof value !== 'undefined'":				{ "prefix": "tu",	"body": ["typeof $0 !== 'undefined'"], "description": "" },
	
	"function NAME () {}":						{ "prefix": "f_",	"body": ["function ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"async function NAME () {}":				{ "prefix": "af_",	"body": ["async function ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"() =>":									{ "prefix": "$1",	"body": ["($1) => $0"], "description": "" },
	"() => {}":									{ "prefix": "$_",	"body": ["($1) => {", "\t", "\t$0", "\t", "}"], "description": "" },
	"async () => {}":							{ "prefix": "a$_",	"body": ["async ($1) => {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"module NAME {}":							{ "prefix": "m_",	"body": ["module ${1:name} {", "\t", "$0", "\t", "}"], "description": "" },
	
	"import {} from ''":						{ "prefix": "i_f1",	"body": ["import { ${0:name} } from '${1:path}';"], "description": "" },
	"import as from ''":						{ "prefix": "iaf1",	"body": ["import * as ${0:name} from '${1:path}';"], "description": "" },
	
	"export * from ''":							{ "prefix": "ef1",	"body": ["export * from '${0:path}';"], "description": "" },
	"export {} from ''":						{ "prefix": "e_f1",	"body": ["export { ${0:name} } from '${1:path}';"], "description": "" },
	
	"export {}":								{ "prefix": "e_",	"body": ["export {", "\t$0", "};"], "description": "" },
	"export default":							{ "prefix": "ed1",	"body": ["export default $0;"], "description": "" },
	"export default {}":						{ "prefix": "ed_",	"body": ["export default {", "\t$0", "};"], "description": "" },
	
	"export const NAME":						{ "prefix": "ec1",	"body": ["export const ${1:name} = ${0:null};"], "description": "" },
	"export let NAME":							{ "prefix": "el1",	"body": ["export let ${1:name} = ${0:null};"], "description": "" },
	"export var NAME":							{ "prefix": "ev1",	"body": ["export var ${1:name} = ${0:null};"], "description": "" },
	
	"export function NAME () {}":				{ "prefix": "ef_",	"body": ["export function ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export async function () {}":				{ "prefix": "eaf_",	"body": ["export async function ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export default function () {}":			{ "prefix": "edf_",	"body": ["export default function ($1) {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"class NAME {}":							{ "prefix": "c_",	"body": ["class ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"class NAME extends PARENT {}":				{ "prefix": "ce_",	"body": ["class ${1:name} extends ${2:parent} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export class NAME {}":						{ "prefix": "ec_",	"body": ["export class ${1:name} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export class NAME extends PARENT {}":		{ "prefix": "ece_",	"body": ["export class ${1:name} extends ${2:parent} {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export default class {}":					{ "prefix": "edc_",	"body": ["export default class {", "\t", "\t$0", "\t", "}"], "description": "" },
	"export default class extends PARENT {}":	{ "prefix": "edce_",	"body": ["export default class extends ${1:parent} {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"constructor () {}":						{ "prefix": "c_",	"body": ["constructor ($1) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"super();":									{ "prefix": "s$",	"body": ["super($0);"], "description": "" },
	"get NAME () {}":							{ "prefix": "g_",	"body": ["get ${1:name} () {", "\t", "\t$0", "\t", "}"], "description": "" },
	"set NAME () {}":							{ "prefix": "s_",	"body": ["set ${1:name} (value) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"get set NAME () {}":						{ "prefix": "g_s_",	"body": ["get ${1:name} () {", "\t", "\t$0", "\t", "}", "", "set ${1:name} (value) {", "\t", "\t", "\t", "}"], "description": "" },
	"NAME () {}":								{ "prefix": "_",	"body": ["${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"static NAME () {}":						{ "prefix": "s_",	"body": ["static ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"async NAME () {}":							{ "prefix": "a_",	"body": ["async ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
	"static async NAME () {}":					{ "prefix": "sa_",	"body": ["static async ${1:name} ($2) {", "\t", "\t$0", "\t", "}"], "description": "" },
		
	"return {};":								{ "prefix": "r_",	"body": ["return {", "\t$0", "};"], "description": "" },
	
	"valueOf () {}":							{ "prefix": "vO_",	"body": ["valueOf () {", "\t", "\t$0", "\t", "}"], "description": "" },
	"toString () {}":							{ "prefix": "tS_",	"body": ["toString () {", "\t", "\treturn '[object ${0:name}]';", "\t", "}"], "description": "" },
	"toJSON () {}":								{ "prefix": "tJ_",	"body": ["toJSON () {", "\t", "\t$0", "\t", "}"], "description": "" },
	
	"throw new Error()":						{ "prefix": "tnE$",	"body": ["throw new Error(${0:message})"], "description": "" },
	"throw new EvalError()":					{ "prefix": "tnEE$",	"body": ["throw new EvalError(${0:message})"], "description": "" },
	"throw new RangeError()":					{ "prefix": "tnRE$",	"body": ["throw new RangeError(${0:message})"], "description": "" },
	"throw new ReferenceError()":				{ "prefix": "tnRE$",	"body": ["throw new ReferenceError(${0:message})"], "description": "" },
	"throw new SyntaxError()":					{ "prefix": "tnSE$",	"body": ["throw new SyntaxError(${0:message})"], "description": "" },
	"throw new TypeError()":					{ "prefix": "tnTE$",	"body": ["throw new TypeError(${0:message})"], "description": "" },
	"throw new URIError()":						{ "prefix": "tnUE$",	"body": ["throw new URIError(${0:message})"], "description": "" },
	
	"console.assert();":						{ "prefix": "ca$",	"body": ["console.assert($0);"], "description": "" },
	"console.clear();":							{ "prefix": "cc$",	"body": ["console.clear();"], "description": "" },
	"console.count();":							{ "prefix": "cc$",	"body": ["console.count($0);"], "description": "" },
	"console.debug();":							{ "prefix": "cd$",	"body": ["console.debug($0);"], "description": "" },
	"console.dir();":							{ "prefix": "cd$",	"body": ["console.dir($0);"], "description": "" },
	"console.error();":							{ "prefix": "ce$",	"body": ["console.error($0);"], "description": "" },
	"console.group();":							{ "prefix": "cg$",	"body": ["console.group($0);"], "description": "" },
	"console.groupCollapsed();":				{ "prefix": "cgC$",	"body": ["console.groupCollapsed($0);"], "description": "" },
	"console.groupEnd();":						{ "prefix": "cgE$",	"body": ["console.groupEnd($0);"], "description": "" },
	"console.info();":							{ "prefix": "ci$",	"body": ["console.info($0);"], "description": "" },
	"console.log();":							{ "prefix": "cl$",	"body": ["console.log($0);"], "description": "" },
	"console.table();":							{ "prefix": "ct$",	"body": ["console.table($0);"], "description": "" },
	"console.time();":							{ "prefix": "ct$",	"body": ["console.time($0);"], "description": "" },
	"console.timeEnd();":						{ "prefix": "ctE$",	"body": ["console.timeEnd($0);"], "description": "" },
	"console.timeLog();":						{ "prefix": "ctE$",	"body": ["console.timeLog($0);"], "description": "" },
	"console.trace();":							{ "prefix": "ct$",	"body": ["console.trace($0);"], "description": "" },
	"console.warn();":							{ "prefix": "cw$",	"body": ["console.warn($0);"], "description": "" },
	
	"JSON.parse()":								{ "prefix": "Jp$",	"body": ["JSON.parse($0)"], "description": "" },
	"JSON.stringify()":							{ "prefix": "Js$",	"body": ["JSON.stringify($0)"], "description": "" },
	"JSON.stringify(..., null, '\\t')":			{ "prefix": "Js$n",	"body": ["JSON.stringify($0, null, '\\t')"], "description": "" },
	
	"Symbol()":									{ "prefix": "S$",	"body": ["Symbol($0)"], "description": "" },
	"Symbol.for()":								{ "prefix": "Sf$",	"body": ["Symbol.for($0)"], "description": "" },
	"Symbol.keyFor()":							{ "prefix": "SkF$",	"body": ["Symbol.keyFor($0)"], "description": "" },
		
	"new Class()":								{ "prefix": "n$",	"body": ["new ${1:Name}($0)"], "description": "" },
	"new Array()":								{ "prefix": "nA$",	"body": ["new Array($0)"], "description": "" },
	"new Date()":								{ "prefix": "nD$",	"body": ["new Date($0)"], "description": "" },
	"new RegExp()":								{ "prefix": "nRE$",	"body": ["new RegExp($0)"], "description": "" },
		
	"Array.isArray()":							{ "prefix": "AiA$",	"body": ["Array.isArray($0)"], "description": "" },
		
	"Object.assign()":							{ "prefix": "Oa$",	"body": ["Object.assign($0)"], "description": "" },
	"Object.create()":							{ "prefix": "Oc$",	"body": ["Object.create($0)"], "description": "" },
	"Object.entries()":							{ "prefix": "Oe$",	"body": ["Object.entries($0)"], "description": "" },
	"Object.keys()":							{ "prefix": "Ok$",	"body": ["Object.keys($0)"], "description": "" },
	"Object.values()":							{ "prefix": "Ov$",	"body": ["Object.values($0)"], "description": "" },
		
	"new Promise(() => {})":					{ "prefix": "nP$_",	"body": ["new Promise((resolve, reject) => {", "\t", "\t$0", "\t", "});"], "description": "" },
	"new Promise(function () {})":				{ "prefix": "nPf_",	"body": ["new Promise(function (resolve, reject) {", "\t", "\t$0", "\t", "});"], "description": "" },
	"Promise.all()":							{ "prefix": "Pa$",	"body": ["Promise.all($0)"], "description": "" },
	"Promise.resolve()":						{ "prefix": "Pr$",	"body": ["Promise.resolve($0)"], "description": "" },
	"Promise.reject()":							{ "prefix": "Pr$",	"body": ["Promise.reject($0)"], "description": "" },
	
	"Sections": {
		"prefix": "___",
		"body": [
			"\/\/\tImports ____________________________________________________________________",
			"",
			"$0",
			"",
			"\/\/\tVariables __________________________________________________________________",
			"",
			"",
			"",
			"\/\/\tInitialize _________________________________________________________________",
			"",
			"",
			"",
			"\/\/\tExports ____________________________________________________________________",
			"",
			"",
			"",
			"\/\/\tFunctions __________________________________________________________________",
			"",
			""
		],
		"description": ""
	}
}